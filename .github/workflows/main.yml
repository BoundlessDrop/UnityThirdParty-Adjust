name: Build Adjust Unity SDK

on: [pull_request]

jobs:
  buildUnity:
    name: Build on Unity ${{ matrix.unityVersion }} for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      fail-fast: false
      matrix:
        unityVersion:
          - 2018.4.36f1
          - 2020.3.9f1
        targetPlatform:
          - iOS
          - Android
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.unityVersion }}-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ matrix.unityVersion }}-
            Library-
      - name: Build project
        uses: game-ci/unity-builder@v2
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
      - uses: actions/upload-artifact@v2
        with:
          name: Build-${{ matrix.unityVersion }}-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}

  buildXcode:
    name: Build iOS project generated by Unity ${{ matrix.unityVersion }}
    runs-on: macos-latest
    needs: buildUnity
    strategy:
      matrix:
        unityVersion:
          - 2018.4.36f1
          - 2020.3.9f1
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true
      - name: Download iOS Artifact
        uses: actions/download-artifact@v2
        with:
          name: Build-${{ matrix.unityVersion }}-iOS
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # Create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # Import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

          # Create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
          security set-keychain-settings -lut 21600 "$KEYCHAIN_PATH"
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"

          # Import certificate to keychain
          security import $CERTIFICATE_PATH -P $P12_PASSWORD -A -t cert -f pkcs12 -k "$KEYCHAIN_PATH"
          security list-keychain -d user -s "$KEYCHAIN_PATH"

          # Apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      - name: Build
        working-directory: iOS
        run: |
          chmod +x MapFileParser.sh # Fix for issue 1071993
          xcodebuild archive -project "Unity-iPhone.xcodeproj" -scheme "Unity-iPhone" -configuration "Release" -archivePath "Unity-iPhone.xcarchive" -destination 'generic/platform=iOS' ENABLE_BITCODE=NO
          xcodebuild -exportArchive -archivePath "Unity-iPhone.xcarchive" -exportOptionsPlist "$GITHUB_WORKSPACE/Assets/Adjust/Test/ExportOptions.plist" -exportPath Export
      - uses: actions/upload-artifact@v2
        with:
          name: Export-${{ matrix.unityVersion }}-iOS
          path: iOS/Export/*.ipa
      - name: Cleanup generated Xcode project to avoid storage limit
        if: always()
        uses: geekyeggo/delete-artifact@v1
        with:
          name: Build-${{ matrix.unityVersion }}-iOS
